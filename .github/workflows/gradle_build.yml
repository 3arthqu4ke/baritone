# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
  pull_request:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 8
      uses: actions/setup-java@v2
      with:
        java-version: '8'
        distribution: 'adopt'

    - uses: actions/github-script@v2
      id: fname
      name: apply beta versioning
      with:
        result-encoding: string
        script: |
          const fs = require("fs");
          let file = fs.readFileSync("./gradle.properties");
          file = file.toString().split("\n").map(e => e.trim().startsWith("mod_version") ? `${e}-beta-${process.env.GITHUB_SHA.substring(0, 7)}` : e).join("\n");
          fs.writeFileSync("./gradle.properties", file);
          const mod_version = file.toString().split("\n").filter(e => e.trim().startsWith("mod_version"))[0].split("=")[1].trim();
          const archives_base_name = file.toString().split("\n").filter(e => e.trim().startsWith("archives_base_name"))[0].split("=")[1].trim();
          return `${archives_base_name}-${mod_version}`;

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Build with Gradle
      run: ./gradlew build
      
    - name: Archive Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: Artifacts
        path: dist/
        
    - name: Archive mapping.txt
      uses: actions/upload-artifact@v2
      with:
        name: Mappings
        path: build/tmp/proguard/mapping.txt
